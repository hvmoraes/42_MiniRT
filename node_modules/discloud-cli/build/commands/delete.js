"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const v2_1 = require("@discloudapp/api-types/v2");
const util_1 = require("../util");
exports.default = {
    name: "delete",
    description: "Delete one or all of your apps on Discloud.",
    alias: ["del", "rb", "ra", "remover", "remove", "removerbot"],
    async run(toolbox) {
        const { parameters, print, prompt } = toolbox;
        if (!util_1.config.data.token)
            return print.error("Please use login command before using this command.");
        if (util_1.RateLimit.isLimited)
            return print.error(`Rate limited until: ${util_1.RateLimit.limited}`);
        if (!parameters.first) {
            const { appId } = await prompt.fetchAndAskForApps({ all: true });
            if (!appId)
                return print.error("Need app id.");
            parameters.first = appId;
        }
        const { confirmDelete } = await prompt.ask({
            name: "confirmDelete",
            message: `You are ${print.colors.red("DELETING")} ${parameters.first}. This action is irreversible! Are sure about it?`,
            type: "select",
            choices: ["Yes", "No"],
        });
        if (confirmDelete === "No")
            return;
        const spin = print.spin({
            text: print.colors.cyan("Deleting..."),
        });
        const apiRes = await util_1.apidiscloud.delete(v2_1.Routes.appDelete(parameters.first));
        new util_1.RateLimit(apiRes.headers);
        print.spinApiRes(apiRes, spin, { exitOnError: true });
        if (!apiRes.data)
            return;
        if ("apps" in apiRes.data)
            print.table((0, util_1.makeTable)(apiRes.data.apps), {
                format: "lean",
            });
    },
};
